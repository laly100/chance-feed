name: Update Chance CSV

permissions:
  contents: write   # <- necesar ca GITHUB_TOKEN să poată face push

on:
  schedule:
    - cron: "25 7 * * 0-4"
    - cron: "25 9 * * 0-4"
    - cron: "25 11 * * 0-4"
    - cron: "25 13 * * 0-4"
    - cron: "25 15 * * 0-4"
    - cron: "25 17 * * 0-4"
    - cron: "25 19 * * 0-4"
    - cron: "25 7 * * 5"
    - cron: "25 9 * * 5"
    - cron: "25 11 * * 5"
    - cron: "25 17 * * 6"
    - cron: "25 19 * * 6"
  workflow_dispatch:

concurrency:
  group: chance-csv
  cancel-in-progress: false

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo (full history)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Show git state (debug)
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git remote -v
          git branch -a
          git log --oneline -5 || true

      - name: Configure git identity
        run: |
          git config user.email "action@github.com"
          git config user.name  "github-actions[bot]"

      - name: Sync local -> origin/main (rebase)
        run: |
          git fetch origin main
          git checkout main
          git pull --rebase origin main || true

      - name: Download Chance CSV (via Worker)
        run: |
          set -e
          CSV_URL="https://broken-fog-19b8.laly100.workers.dev/"
          for i in 1 2 3; do
            echo "Try #$i download…"
            curl -fsSL "$CSV_URL" -o chance.csv && break || sleep 3
          done
          test -s chance.csv
          wc -c chance.csv || true
          head -n 3 chance.csv || true

      - name: Commit if changed
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "No changes to commit."
            echo "no_changes=true" >> $GITHUB_OUTPUT
          else
            git commit -m "update chance.csv"
            echo "no_changes=false" >> $GITHUB_OUTPUT
          fi
        id: commit_step

      - name: Push (attempt 1, rebase then push)
        if: steps.commit_step.outputs.no_changes == 'false'
        run: |
          set -e
          git pull --rebase origin main || true
          git push origin HEAD:main

      - name: Push (attempt 2, final fallback)
        if: failure() && steps.commit_step.outputs.no_changes == 'false'
        run: |
          echo "Retry push with rebase on top of origin/main…"
          git fetch origin main
          git rebase origin/main || true
          # dacă branch-ul NU e protejat cu interdicție de force, folosește:
          # git push --force-with-lease origin HEAD:main
          # altfel:
          git push origin HEAD:main
